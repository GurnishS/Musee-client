name: Build and Release Flutter App

on:
  push:
    tags:
      - 'v*'   # Trigger when pushing a tag like v1.0.0

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
          - platform: linux
            os: ubuntu-latest
          - platform: windows
            os: windows-latest
          - platform: macos
            os: macos-latest

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          channel: stable

      - run: flutter pub get

      - name: Create app_secrets.dart
        run: |
          mkdir -p lib/core/secrets
          cat > lib/core/secrets/app_secrets.dart <<'EOF'
          class AppSecrets {
            static const bool isProduction = true;
            static const String supabaseUrl = "${{ secrets.SUPABASE_URL }}";
            static const String supabaseAnonKey = "${{ secrets.SUPABASE_ANON_KEY }}";
            static const String backendUrl = "${{ secrets.BACKEND_URL }}";
          }
          EOF

      # Linux dependencies
      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev zip

      - name: Build Flutter App
        run: |
          mkdir -p dist
          if [ "${{ matrix.platform }}" == "android" ]; then
            flutter build apk --release
            cp build/app/outputs/flutter-apk/app-release.apk dist/app-release.apk

          elif [ "${{ matrix.platform }}" == "linux" ]; then
            flutter build linux --release
            cd build/linux/x64/release/bundle && zip -r ../../../../../dist/linux-build.zip . && cd -

          elif [ "${{ matrix.platform }}" == "windows" ]; then
            flutter build windows --release
            cd build/windows/x64/runner/Release && zip -r ../../../../../dist/windows-build.zip . && cd -

          elif [ "${{ matrix.platform }}" == "macos" ]; then
            flutter build macos --release
            cd build/macos/Build/Products/Release && zip -r ../../../../../dist/macos-build.zip . && cd -
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: dist/
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "ğŸš€ Release ${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          body: |
            ### ğŸ§¾ Changelog
            - Automated Flutter build and release
            - Platforms: Android, Linux, Windows, macOS
            - Built on `${{ runner.os }}` runners
            
            _Generated by GitHub Actions_
          files: ./artifacts/**/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
