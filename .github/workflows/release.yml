name: Build and Release Flutter App

on:
  push:
    tags:
      - 'v*'   # runs only when you push a tag like v1.0.0

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
          - platform: web
            os: ubuntu-latest
          - platform: linux
            os: ubuntu-latest
          - platform: windows
            os: windows-latest
          - platform: macos
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'

      - run: flutter pub get

      - name: Create app_secrets.dart
        shell: bash
        run: |
          mkdir -p lib/core/secrets
          cat > lib/core/secrets/app_secrets.dart <<'EOF'
          class AppSecrets {
            // Environment configuration
            static const bool isProduction = true;

            // Supabase configuration (safe for all platforms)
            static const String supabaseUrl = "${{ secrets.SUPABASE_URL }}";
            static const String supabaseAnonKey = "${{ secrets.SUPABASE_ANON_KEY }}";
            static const String backendUrl = "${{ secrets.BACKEND_URL }}";
          }
          EOF

      - name: Build for ${{ matrix.platform }}
        run: |
          if [ "${{ matrix.platform }}" == "android" ]; then
            flutter build apk --release
          elif [ "${{ matrix.platform }}" == "web" ]; then
            flutter build web --release
          elif [ "${{ matrix.platform }}" == "linux" ]; then
            flutter build linux --release
          elif [ "${{ matrix.platform }}" == "windows" ]; then
            flutter build windows --release
          elif [ "${{ matrix.platform }}" == "macos" ]; then
            flutter build macos --release
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/web/
            build/linux/x64/release/bundle/
            build/windows/x64/runner/Release/
            build/macos/Build/Products/Release/
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
